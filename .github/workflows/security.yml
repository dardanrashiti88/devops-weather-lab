name: 🔒 Security Scanning

on:
  # Only run manually or on a schedule, not on push or PR
  # schedule:
  #   - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  security-audit:
    name: 🔍 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: ℹ️ Trivy scan completed
        run: |
          echo "Trivy security scan completed"
          echo "SARIF files will be uploaded when vulnerabilities are found"

      - name: 🔍 Run npm audit
        run: |
          echo "=== Backend Security Audit ==="
          cd backend
          npm audit --audit-level=moderate || echo "Backend audit completed with warnings"
          cd ../frontend
          echo "=== Frontend Security Audit ==="
          npm audit --audit-level=moderate || echo "Frontend audit completed with warnings"

      - name: 🏗️ Start application for ZAP scan
        run: |
          # Start the application using docker compose
          docker compose up -d frontend backend
          echo "Waiting for application to be ready..."
          sleep 30
          
          # Check if application is accessible
          if curl -f http://localhost:3000 >/dev/null 2>&1; then
            echo "Application is ready for ZAP scan"
            echo "app-ready=true" >> $GITHUB_OUTPUT
          else
            echo "Application is not accessible, skipping ZAP scan"
            echo "app-ready=false" >> $GITHUB_OUTPUT
          fi
        id: app-check

      - name: 🛡️ Run OWASP ZAP security scan
        if: steps.app-check.outputs.app-ready == 'true'
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: ℹ️ Skip ZAP scan - application not available
        if: steps.app-check.outputs.app-ready == 'false'
        run: |
          echo "Skipping ZAP security scan - application is not running on localhost:3000"
          echo "This is normal for security scans that run before the application is deployed"

      - name: 🧹 Cleanup application
        if: always()
        run: |
          docker compose down || true

      - name: 🔍 Run Bandit (Python security)
        run: |
          pip install bandit
          bandit -r . -f json -o bandit-report.json || true

      - name: 📊 Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            trivy-results.sarif
            bandit-report.json
          retention-days: 30

  dependency-check:
    name: 📦 Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 🔍 Run npm audit
        run: |
          echo "=== Backend Dependency Check ==="
          cd backend
          npm audit --audit-level=moderate || echo "Backend dependency check completed with warnings"
          cd ../frontend
          echo "=== Frontend Dependency Check ==="
          npm audit --audit-level=moderate || echo "Frontend dependency check completed with warnings"

      - name: 🔍 Run yarn audit (if applicable)
        run: |
          if [ -f "yarn.lock" ]; then
            yarn audit --level moderate || echo "Yarn audit completed with warnings"
          fi

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔍 Check if images exist
        id: check-images
        run: |
          # Check if backend image exists
          if docker manifest inspect ghcr.io/${{ github.repository }}/backend:latest >/dev/null 2>&1; then
            echo "backend-exists=true" >> $GITHUB_OUTPUT
          else
            echo "backend-exists=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if frontend image exists
          if docker manifest inspect ghcr.io/${{ github.repository }}/frontend:latest >/dev/null 2>&1; then
            echo "frontend-exists=true" >> $GITHUB_OUTPUT
          else
            echo "frontend-exists=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔍 Scan Backend container
        if: steps.check-images.outputs.backend-exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/backend:latest'
          format: 'sarif'
          output: 'backend-container-scan.sarif'

      - name: 🔍 Scan Frontend container
        if: steps.check-images.outputs.frontend-exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/frontend:latest'
          format: 'sarif'
          output: 'frontend-container-scan.sarif'

      - name: ℹ️ Container scan completed
        run: |
          echo "Container security scan completed"
          echo "SARIF files will be uploaded when vulnerabilities are found"

      - name: ℹ️ No container images to scan
        if: steps.check-images.outputs.backend-exists == 'false' && steps.check-images.outputs.frontend-exists == 'false'
        run: |
          echo "No container images found to scan. Images will be scanned after they are built in the main CI/CD pipeline."
          echo "This is normal for the first run or when images haven't been built yet."

      - name: 📊 Upload backend container scan SARIF report
        if: steps.check-images.outputs.backend-exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: backend-container-scan.sarif

      - name: 📊 Upload frontend container scan SARIF report
        if: steps.check-images.outputs.frontend-exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: frontend-container-scan.sarif 