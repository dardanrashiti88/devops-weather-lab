version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-3000}:${BACKEND_PORT:-3000}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-your-mysql-password}
      - MYSQL_HOST=mysql-db
      - MYSQL_USER=root
      - MYSQL_DATABASE=lab_db
    networks:
      - monitoring_network
    depends_on:
      - mysql-db

  mysql-db:
    image: mysql:8
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-your-mysql-password}
      - MYSQL_DATABASE=lab_db
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-your-mysql-password}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_network
    depends_on:
      - backend
      - mysql-db

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SECURITY_ADMIN_USER=admin
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - monitoring_network
    depends_on:
      - prometheus

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      - PMA_HOST=mysql-db
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD:-your-secure-mysql-password}
      - UPLOAD_LIMIT=64M
      - MEMORY_LIMIT=256M
      - MAX_EXECUTION_TIME=300
    ports:
      - "9091:80"
    networks:
      - monitoring_network
    depends_on:
      - mysql-db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3002:8080"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/nginx-default.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:3000
    networks:
      - monitoring_network
    depends_on:
      - backend
    restart: unless-stopped

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld-exporter
    restart: always
    command:
      - '--config.my-cnf=/etc/mysql/exporter.my.cnf'
    volumes:
      - ./db/exporter.my.cnf:/etc/mysql/exporter.my.cnf:ro
    ports:
      - "9104:9104"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9104/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  monitoring_network:
    driver: bridge

volumes:
  mysql_data:
